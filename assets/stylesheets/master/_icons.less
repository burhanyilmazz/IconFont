@font-face {
	font-family: "IconFont";
	src: url('../fonts/icons/IconFont.eot');
	src: url('../fonts/icons/IconFont.eot?#iefix') format('eot'),
		url('../fonts/icons/IconFont.woff2') format('woff2'),
		url('../fonts/icons/IconFont.woff') format('woff'),
		url('../fonts/icons/IconFont.ttf') format('truetype'),
		url('../fonts/icons/IconFont.svg#IconFont') format('svg');
}

.icon-base-pseudo {
	font-family: "IconFont";
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	// speak: none; // only necessary if not using the private unicode range (firstGlyph option)
	text-decoration: none;
	text-transform: none;
}

.icon-char(@filename) {
	@account: "\E001";
	@app: "\E002";
	@code: "\E003";
	@container: "\E004";
	@device: "\E005";
	@explore: "\E006";
	@gift: "\E007";
	@help: "\E008";
	@notification: "\E009";
	@people: "\E00A";
	@settings-mini: "\E00B";
	@settings: "\E00C";
	@shopping-cart: "\E00D";
	@storage: "\E00E";
	@usb: "\E00F";
	@vpn: "\E010";
	
	content: @@filename;
}

.icon(@filename, @insert: before) {
	@pseudo-selector: ~":@{insert}";

	&@{pseudo-selector} {
		&:extend(.icon-base-pseudo);
		.icon-char(@filename);
	}
}

.icon-account {
	.icon(account);
}
.icon-app {
	.icon(app);
}
.icon-code {
	.icon(code);
}
.icon-container {
	.icon(container);
}
.icon-device {
	.icon(device);
}
.icon-explore {
	.icon(explore);
}
.icon-gift {
	.icon(gift);
}
.icon-help {
	.icon(help);
}
.icon-notification {
	.icon(notification);
}
.icon-people {
	.icon(people);
}
.icon-settings-mini {
	.icon(settings-mini);
}
.icon-settings {
	.icon(settings);
}
.icon-shopping-cart {
	.icon(shopping-cart);
}
.icon-storage {
	.icon(storage);
}
.icon-usb {
	.icon(usb);
}
.icon-vpn {
	.icon(vpn);
}